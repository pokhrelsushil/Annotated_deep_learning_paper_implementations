{
 "<h1>Receptance Weighted Key Value (RWKV)</h1>\n<p>This is a tutorial/implementation of RWKV from paper <a href=\"https://arxiv.org/pdf/2305.13048.pdf\">RWKV: Reinventing RNNs for the Transformer Era</a> in <a href=\"https://pytorch.org/\">PyTorch</a>.</p>\n<p>Full definition of a RWKV Language Model, all of it in this single file. References: 1) <a href=\"https://github.com/BlinkDL/RWKV-LM/blob/main/RWKV-v4neo/src/model.py\">the official RWKV PyTorch implementation released by Bo Peng</a> 2) <a href=\"https://github.com/huggingface/transformers/blob/main/src/transformers/models/rwkv/modeling_rwkv.py\">huggingface/transformers PyTorch implementation</a></p>\n": "<h1>Receptance Weighted Key Value (RWKV)</h1>\n<p>This is a tutorial/implementation of RWKV from paper <a href=\"https://arxiv.org/pdf/2305.13048.pdf\">RWKV: Reinventing RNNs for the Transformer Era</a> in <a href=\"https://pytorch.org/\">PyTorch</a>.</p>\n<p>Full definition of a RWKV Language Model, all of it in this single file. References: 1) <a href=\"https://github.com/BlinkDL/RWKV-LM/blob/main/RWKV-v4neo/src/model.py\">the official RWKV PyTorch implementation released by Bo Peng</a> 2) <a href=\"https://github.com/huggingface/transformers/blob/main/src/transformers/models/rwkv/modeling_rwkv.py\">huggingface/transformers PyTorch implementation</a></p>\n",
 "<h1>x = (Batch,Time,Channel)</h1>\n": "<h1>x = (Batch,Time,Channel)</h1>\n",
 "<h2>RWKV block element</h2>\n": "<h2>RWKV block element</h2>\n",
 "<h2>RWKV</h2>\n": "<h2>RWKV</h2>\n",
 "<h3>Channel Mixing</h3>\n": "<h3>Channel Mixing</h3>\n",
 "<h3>L2 loss wrapper</h3>\n<p><a href=\"https://github.com/BlinkDL/RWKV-LM/blob/cca1b5e8e597cf40675882bb10b46287c844e35c/RWKV-v4/src/model.py#L21\">ref</a></p>\n": "<h3>L2 loss wrapper</h3>\n<p><a href=\"https://github.com/BlinkDL/RWKV-LM/blob/cca1b5e8e597cf40675882bb10b46287c844e35c/RWKV-v4/src/model.py#L21\">ref</a></p>\n",
 "<h3>Layer normalization with bias</h3>\n": "<h3>Layer normalization with bias</h3>\n",
 "<h3>Time Mixing</h3>\n": "<h3>Time Mixing</h3>\n",
 "<p> x = (Batch,Time,Channel)</p>\n": "<p> x = (Batch,Time,Channel)</p>\n",
 "<p><span translate=no>_^_0_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span> </p>\n",
 "<p>Embedding Layer </p>\n": "<p>Embedding Layer </p>\n",
 "<p>Initiate model layers </p>\n": "<p>Initiate model layers </p>\n",
 "<p>Layer Norm </p>\n": "<p>Layer Norm </p>\n",
 "<p>Learnable Matrix </p>\n": "<p>Learnable Matrix </p>\n",
 "<p>Learnable Vector </p>\n": "<p>Learnable Vector </p>\n",
 "<p>Logit Layer and loss Function (for training) </p>\n": "<p>Logit Layer and loss Function (for training) </p>\n",
 "<p>Output linear layer </p>\n": "<p>Output linear layer </p>\n",
 "<p>RWKV Blocks </p>\n": "<p>RWKV Blocks </p>\n",
 "<p>Return Logits and loss </p>\n": "<p>Return Logits and loss </p>\n",
 "<p>Update state for next iteration </p>\n": "<p>Update state for next iteration </p>\n",
 "<p>WKV calculation </p>\n": "<p>WKV calculation </p>\n",
 "<p>channel mixing </p>\n": "<p>channel mixing </p>\n",
 "<p>if we are given some desired targets also calculate the loss </p>\n": "<p>if we are given some desired targets also calculate the loss </p>\n",
 "<p>inference-time mini-optimization: only forward the lm_head on the very last position </p>\n": "<p>inference-time mini-optimization: only forward the lm_head on the very last position </p>\n",
 "<p>learnable matrix </p>\n": "<p>learnable matrix </p>\n",
 "<p>learnable vector </p>\n": "<p>learnable vector </p>\n",
 "<p>state: <a href=\"batch_size, 5 , n_embd\">batch_size, 5 , n_embd</a> </p>\n": "<p>state: <a href=\"batch_size, 5 , n_embd\">batch_size, 5 , n_embd</a> </p>\n",
 "<p>time mixing </p>\n": "<p>time mixing </p>\n",
 "<p>to encourage the logits to be close to 0 </p>\n": "<p>to encourage the logits to be close to 0 </p>\n",
 "<p>token shifting </p>\n": "<p>token shifting </p>\n",
 "<p>update states </p>\n": "<p>update states </p>\n",
 "Receptance Weighted Key Value (RWKV)": "Receptance Weighted Key Value (RWKV)",
 "This implements the RWKV model  using PyTorch with explanations.": "This implements the RWKV model  using PyTorch with explanations."
}